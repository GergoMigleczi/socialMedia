CREATE TABLE IF NOT EXISTS USERS (
  id INT PRIMARY KEY AUTO_INCREMENT,
  email VARCHAR(255) UNIQUE,
  password VARCHAR(255),
  is_admin BOOLEAN NOT NULL DEFAULT FALSE,
  blocked_until DATE DEFAULT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS PROFILES (
  id INT PRIMARY KEY AUTO_INCREMENT,
  user_id INT UNIQUE,
  full_name VARCHAR(255),
  date_of_birth DATE,
  profile_picture VARCHAR(255),
  FOREIGN KEY (user_id) REFERENCES USERS(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS FRIEND_REQUESTS (
  id INT PRIMARY KEY AUTO_INCREMENT,
  sender_profile_id INT NOT NULL,
  receiver_profile_id INT NOT NULL,
  status ENUM('pending') NOT NULL DEFAULT 'pending',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  UNIQUE (sender_profile_id, receiver_profile_id),
  FOREIGN KEY (sender_profile_id) REFERENCES PROFILES(id) ON DELETE CASCADE,
  FOREIGN KEY (receiver_profile_id) REFERENCES PROFILES(id) ON DELETE CASCADE,
  CHECK (sender_profile_id <> receiver_profile_id)
);

CREATE TABLE IF NOT EXISTS FRIENDSHIPS (
  id INT PRIMARY KEY AUTO_INCREMENT,
  profile_id_1 INT NOT NULL,
  profile_id_2 INT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UNIQUE (profile_id_1, profile_id_2),
  FOREIGN KEY (profile_id_1) REFERENCES PROFILES(id) ON DELETE CASCADE,
  FOREIGN KEY (profile_id_2) REFERENCES PROFILES(id) ON DELETE CASCADE,
  CHECK (profile_id_1 < profile_id_2)
);

CREATE TABLE IF NOT EXISTS BLOCKED_PROFILES (
  id INT PRIMARY KEY AUTO_INCREMENT,
  blocker_profile_id INT NOT NULL,
  blocked_profile_id INT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UNIQUE (blocker_profile_id, blocked_profile_id),
  FOREIGN KEY (blocker_profile_id) REFERENCES PROFILES(id) ON DELETE CASCADE,
  FOREIGN KEY (blocked_profile_id) REFERENCES PROFILES(id) ON DELETE CASCADE,
  CHECK (blocker_profile_id <> blocked_profile_id)
);

CREATE TABLE IF NOT EXISTS PROFILE_REPORTS (
  id INT PRIMARY KEY AUTO_INCREMENT,
  reporter_profile_id INT NOT NULL,
  reported_profile_id INT NOT NULL,
  reason_type ENUM('spam', 'harassment', 'inappropriate_content') NOT NULL,
  description VARCHAR(255),
  status ENUM('pending', 'reviewed', 'resolved', 'dismissed') NOT NULL DEFAULT 'pending',
  admin_notes VARCHAR(255),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (reporter_profile_id) REFERENCES PROFILES(id) ON DELETE CASCADE,
  FOREIGN KEY (reported_profile_id) REFERENCES PROFILES(id) ON DELETE CASCADE,
  CHECK (reporter_profile_id <> reported_profile_id)
);

CREATE TABLE IF NOT EXISTS CHATS (
  id INT PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(255),
  is_group_chat BOOLEAN NOT NULL DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS PROFILES_IN_CHAT (
  id INT PRIMARY KEY AUTO_INCREMENT,
  chat_id INT NOT NULL,
  profile_id INT NOT NULL,
  role ENUM('member', 'admin') NOT NULL DEFAULT 'member',
  joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  last_read_at TIMESTAMP,
  is_muted BOOLEAN NOT NULL DEFAULT FALSE,
  UNIQUE (chat_id, profile_id),
  FOREIGN KEY (chat_id) REFERENCES CHATS(id) ON DELETE CASCADE,
  FOREIGN KEY (profile_id) REFERENCES PROFILES(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS MESSAGES (
  id INT PRIMARY KEY AUTO_INCREMENT,
  chat_id INT NOT NULL,
  sender_profile_id INT NOT NULL,
  content VARCHAR(255) NOT NULL,
  message_type ENUM('text', 'image', 'video', 'file') NOT NULL DEFAULT 'text',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  edited_at TIMESTAMP,
  is_deleted BOOLEAN NOT NULL DEFAULT FALSE,
  FOREIGN KEY (chat_id) REFERENCES CHATS(id) ON DELETE CASCADE,
  FOREIGN KEY (sender_profile_id) REFERENCES PROFILES(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS POSTS (
  id INT PRIMARY KEY AUTO_INCREMENT,
  profile_id INT NOT NULL,
  content VARCHAR(255),
  latitude DECIMAL(10,8),
  longitude DECIMAL(11,8),
  location_name VARCHAR(255),
  is_location_visible BOOLEAN NOT NULL DEFAULT TRUE,
  visibility ENUM('public', 'friends', 'private') NOT NULL DEFAULT 'public',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  is_deleted BOOLEAN NOT NULL DEFAULT FALSE,
  FOREIGN KEY (profile_id) REFERENCES PROFILES(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS POST_MEDIA (
  id INT PRIMARY KEY AUTO_INCREMENT,
  post_id INT NOT NULL,
  media_type ENUM('image', 'video', 'audio', 'document') NOT NULL,
  media_url VARCHAR(255) NOT NULL,
  thumbnail_url VARCHAR(255),
  position INT NOT NULL DEFAULT 0,
  alt_text VARCHAR(255),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (post_id) REFERENCES POSTS(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS LIKES (
  id INT PRIMARY KEY AUTO_INCREMENT,
  post_id INT NOT NULL,
  profile_id INT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UNIQUE (post_id, profile_id),
  FOREIGN KEY (post_id) REFERENCES POSTS(id) ON DELETE CASCADE,
  FOREIGN KEY (profile_id) REFERENCES PROFILES(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS COMMENTS (
  id INT PRIMARY KEY AUTO_INCREMENT,
  post_id INT NOT NULL,
  profile_id INT NOT NULL,
  content VARCHAR(255) NOT NULL,
  parent_comment_id INT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  is_deleted BOOLEAN NOT NULL DEFAULT FALSE,
  FOREIGN KEY (post_id) REFERENCES POSTS(id) ON DELETE CASCADE,
  FOREIGN KEY (profile_id) REFERENCES PROFILES(id) ON DELETE CASCADE,
  FOREIGN KEY (parent_comment_id) REFERENCES COMMENTS(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS NOTIFICATIONS (
  id INT PRIMARY KEY AUTO_INCREMENT,
  profile_id INT NOT NULL,
  type ENUM('message', 'friend_request', 'post', 'comment', 'like') NOT NULL,
  actor_profile_id INT,
  related_item_id INT,
  related_item_type VARCHAR(255),
  content VARCHAR(255),
  is_read BOOLEAN NOT NULL DEFAULT FALSE,
  is_deleted BOOLEAN NOT NULL DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (profile_id) REFERENCES PROFILES(id) ON DELETE CASCADE,
  FOREIGN KEY (actor_profile_id) REFERENCES PROFILES(id) ON DELETE CASCADE
);
